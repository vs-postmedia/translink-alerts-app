{"version":3,"sources":["components/Aux/Aux.jsx","components/Input/Input.js","components/SummaryBox/SummaryBox.js","components/Card/Card.js","components/CardList/CardList.js","components/Layout/Layout.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Aux","props","children","Input","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","value","inherits","createClass","key","react_default","a","createElement","Aux_Aux","id","type","placeholder","onChange","Component","SummaryBox","stats","data","bus","route","seabus","routeList","i","transitType","includes","push","calculateStats","className","Card","d","date","time","split","day","times","alertType","lastUpdate","info","CardList","sort","b","parseInt","map","components_Card_Card","Layout","filteredData","_this2","fetch","dataURL","then","response","json","setState","event","selectedRoute","target","filter","results","components_CardList_CardList","components_Input_Input","handleInputChange","bind","components_SummaryBox_SummaryBox","googleSheetURL","App","components_Layout_Layout","sheet","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3897ac0.chunk.js","sourcesContent":["const Aux = (props) => { return props.children; };\n\nexport default Aux;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\n\nexport class Input extends Component {\n\tstate = {value: 'Enter a bus number...'};\n\n\trender() {\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<label id=\"input\">\n\t\t\t\t\t<input type=\"text\" placeholder={this.state.value} onChange={this.props.onChange}/>\n\t\t\t\t</label>\n\t\t\t</Aux>\n\t\t)\n\t}\n\t\n}\n\nexport default Input;","import React from 'react';\nimport './SummaryBox.css';\n\n\nconst SummaryBox = (props) => {\n\tfunction calculateStats(data) {\n\t\tlet stats = {\n\t\t\tbus: 0,\n\t\t\troute: 0,\n\t\t\tseabus: 0,\n\t\t\trouteList: []\n\t\t};\n\n\t\tfor (let i = 0; i < data.length; ++i) {\n\t\t\t// how many buses?\n\t\t\tif (data[i].transitType === 'bus') {\n\t\t\t\tstats.bus++\n\t\t\t} \n\t\t\t// how many routes?\n\t\t\tif (!stats.routeList.includes(data[i]).route) {\n\t\t\t\tstats.routeList.push(data[i].route);\n\t\t\t\tstats.route++;\n\t\t\t}\n\t\t}\n\n\t\treturn stats;\n\t}\n\n\tconst stats = calculateStats(props.data);\n\n\treturn (\n\t\t<div className=\"summary-box\">\t\t\n\t\t\t<h2>There are <span className=\"highlight\">{`${stats.bus} buses`}</span> on <span className=\"highlight\">{`${stats.route} routes`}</span> scheduled to be cancelled.</h2>\n\t\t</div>\n\t)\n}\n\nexport default SummaryBox;\n\n","import React from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n\tconst d = props.data;\n\n\tconst date = d.time.split('-')\n\tconst day = `${date[1]}. ${date[0]}`;\n\tconst times = d.time.split(' ');\n\tconst time = `${times[1]} ${times[2]} to ${times[5]} ${times[6]}`\n\t\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<header>\n\t\t\t\t<h2>{d.route}</h2>\n\t\t\t\t<p className=\"type\">{d.alertType}</p>\n\t\t\t</header>\n\n\t\t\t<div className=\"schedule\">\n\t\t\t\t<div className=\"date\">\n\t\t\t\t\t<p className=\"day\"><strong>{day}</strong></p>\n\t\t\t\t\t<p className=\"time\">{time}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"update\">\n\t\t\t\t\t<p><strong>Last update:</strong></p>\n\t\t\t\t\t<p>about {d.lastUpdate}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<h4>Details</h4>\n\t\t\t<p className=\"info\">{d.info}</p>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default Card;\n\n\n\n","import React from 'react';\n// import Aux from '../Aux/Aux';\nimport Card from '../Card/Card';\n\nimport './CardList.css';\n\n\nconst CardList = (props) => {\n\tconst data = props.data.sort((a,b) => {\n\t\treturn parseInt(a.route) - parseInt(b.route);\n\t});\n\n \treturn (\n \t\t<div className=\"card-list\">\n \t\t\t{data.map((d,i) => {\n \t\t\t\treturn (\n \t\t\t\t\t<Card className='card' data={d} key={i} id={d.route}></Card>\n \t\t\t\t)\n \t\t\t})}\n \t\t</div>\n \t)\n\t\n}\n\n\nexport default CardList;\n","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport Input from '../Input/Input';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport CardList from '../CardList/CardList';\nimport './Layout.css';\n\nexport class Layout extends Component {\n\tstate = {\n\t\tdata: [],\n\t\tfilteredData: []\n\t};\n\n\tcomponentDidMount() {\n\t\tfetch(this.props.dataURL)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({ \n\t\t\t\tdata: data,\n\t\t\t\tfilteredData: data\n\t\t\t}));\n\t}\n\n\n\thandleInputChange(event) {\n\t\tconst selectedRoute = event.target.value === '' ? this.state.data : this.state.data.filter(d => d.route.includes(event.target.value));\n\n\t\tthis.setState({\n\t\t\tfilteredData: selectedRoute\n\t\t});\n\t}\n\n\trender() {\n\t\tlet results;\n\t\tif (this.state.filteredData.length > 0) {\n\t\t\tresults = <CardList data={this.state.filteredData}></CardList>;\n\t\t} else {\n\t\t\tresults = <p className=\"no-data\">No cancellations</p>;\n\t\t}\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<h1>Is my bus cancelled?</h1>\n\t\t\t\t<Input onChange={this.handleInputChange.bind(this)}></Input>\n\t\t\t\t<SummaryBox data={this.state.data}></SummaryBox>\n\t\t\t\t{results}\n\t\t\t\t<footer className=\"footer\">Scroll...</footer>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nexport default Layout;\n\n//<h1>Are buses cancelled on my route?</h1>\n","import React from 'react';\nimport Layout from '../Layout/Layout';\nimport './App.css';\n\nconst googleSheetURL = 'https://docs.google.com/spreadsheets/d/11u1G_UkKV4RZUAn2uYLsrtaaK2G9Die2rNfONGXV-A0/edit?usp=sharing';\nconst dataURL = 'https://storage.googleapis.com/vs-postmedia-data/alerts.json';\n\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<Layout sheet={googleSheetURL} dataURL={dataURL}></Layout>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}